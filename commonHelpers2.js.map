{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// ============= import modules =============\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// ============= document elements =============\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromise);\n\n// ============= event function =============\n\nfunction createPromise(event) {\n  event.preventDefault();\n\n  const state = form.state.value;\n  const delay = parseInt(form.delay.value); // Nan if invalid\n\n  // ============= create promise ==============\n\n  if (delay) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (state === 'fulfilled') {\n          resolve(delay);\n        } else if (state === 'rejected') {\n          reject(delay);\n        }\n      }, delay);\n    });\n\n    // ============= processing of promise value ==============\n\n    promise\n      .then(delay => {\n        iziToast.success({\n          title: 'Success',\n          message: `✅ Fulfilled promise in ${delay}ms`,\n          position: 'topRight',\n        });\n      })\n\n      .catch(delay => {\n        iziToast.error({\n          title: 'Error',\n          message: `❌ Rejected promise in ${delay}ms`,\n          position: 'topRight',\n        });\n      });\n  }\n\n  event.currentTarget.reset(); // reset input value\n}\n"],"names":["form","createPromise","event","state","delay","resolve","reject","iziToast"],"mappings":"wIAOA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAC3CA,EAAK,iBAAiB,SAAUC,CAAa,EAI7C,SAASA,EAAcC,EAAO,CAC5BA,EAAM,eAAc,EAEpB,MAAMC,EAAQH,EAAK,MAAM,MACnBI,EAAQ,SAASJ,EAAK,MAAM,KAAK,EAInCI,GACc,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQD,CAAK,EACJD,IAAU,YACnBG,EAAOF,CAAK,CAEf,EAAEA,CAAK,CACd,CAAK,EAKE,KAAKA,GAAS,CACbG,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BH,CAAK,KACxC,SAAU,UACpB,CAAS,CACT,CAAO,EAEA,MAAMA,GAAS,CACdG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBH,CAAK,KACvC,SAAU,UACpB,CAAS,CACT,CAAO,EAGLF,EAAM,cAAc,OACtB"}